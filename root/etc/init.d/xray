#!/bin/sh /etc/rc.common

START=90
STOP=15
USE_PROCD=1
NAME=xray

GENERATE_CONF="/usr/share/xray/gen_config.lua"

uci_get_by_name() {
    local ret=$(uci get ${NAME}.$1.$2 2> /dev/null)
    echo ${ret:=$3}
}

uci_get_by_type() {
    local ret=$(uci get ${NAME}.@$1[0].$2 2> /dev/null)
    echo ${ret:=$3}
}

uci_bool_by_name() {
    case "$(uci_get_by_name $1 $2)" in
        1 | on | true | yes | enabled) return 0 ;;
    esac
    return 1
}

get_lan_hosts() {
    uci_bool_by_name $1 enable && echo "$(uci_get_by_name $1 type),$(uci_get_by_name $1 macaddr)"
}

flush_when_disable() {
    local enable=$(uci_get_by_type general transparent_proxy_enable)
    [ "$enable" = 0 ] && /usr/bin/transparent-proxy-rules -f
}

create_when_enable() {
    local enable=$(uci_get_by_type general transparent_proxy_enable)
    [ "$enable" = 1 ] || return 0
    config_load $NAME
    /usr/bin/transparent-proxy-rules \
        -i "$(uci get firewall.xray.path)" \
        -m "$(uci_get_by_type general mark)" \
        -t "$(uci_get_by_type general tproxy_port_tcp 12345)" \
        -u "$(uci_get_by_type general tproxy_port_udp 12345)" \
        -B "$(uci_get_by_type general wan_bp_list)" \
        -b "$(uci_get_by_type general wan_bp_ips)" \
        -W "$(uci_get_by_type general wan_fw_list)" \
        -w "$(uci_get_by_type general wan_fw_ips)" \
        -I "$(uci_get_by_type general lan_ifaces)" \
        -d "$(uci_get_by_type general lan_target)" \
        -a "$(config_foreach get_lan_hosts lan_hosts)"
}

validate_server() {
    [[ "$(uci get ${NAME}.$1 2> /dev/null)" = "servers" ]]
}

# 生成配置文件
gen_config_file() {
    local config_file=/var/etc/${NAME}.$1.json
    /usr/bin/lua ${GENERATE_CONF} > ${config_file}
    echo ${config_file}
}

# 启动xray服务
start_xray() {
    xray_bin=$(uci_get_by_type general xray_bin)
    command -v ${xray_bin} > /dev/null 2>&1 || return 1
    local main_server=$(uci_get_by_type general main_server)
    validate_server ${main_server} || return 1
    echo "server=/#/127.0.0.1#$(uci_get_by_type general dns_port)" > /tmp/dnsmasq.d/xray.conf
    procd_open_instance
    procd_set_param respawn
    procd_set_param command $xray_bin
    procd_append_param command -config
    procd_append_param command $(gen_config_file ${main_server})
    procd_set_param limits nofile="8192 16384"
    procd_set_param env XRAY_LOCATION_ASSET=/usr/share/xray
    procd_set_param stdout 1
    procd_set_param stderr 1
    procd_set_param file /etc/config/xray
    procd_close_instance
    /etc/init.d/dnsmasq restart
}

start_service() {
    config_load ${NAME}
    mkdir -p /var/run /var/etc
    create_when_enable || /usr/bin/transparent-proxy-rules -f
    start_xray 
}

stop_service() {
    rm /tmp/dnsmasq.d/xray.conf
    /etc/init.d/dnsmasq restart
    flush_when_disable
}

service_triggers() {
    procd_add_reload_trigger "xray"
}
